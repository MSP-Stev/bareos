#!/bin/bash
set -e
set -u
#
# Run a simple backup
#   then restore it.
#
TestName="$(basename "$(pwd)")"
export TestName

JobName=backup-bareos-fd

#shellcheck source=../environment.in
. ./environment

#shellcheck source=../scripts/functions
. "${rscripts}"/functions
"${rscripts}"/cleanup
"${rscripts}"/setup


# Directory to backup.
# This directory will be created by setup_data "$@"().
BackupDirectory="${tmp}/data"

# Use a tgz to setup data to be backed up.
# Data will be placed at "${tmp}/data/".
setup_data "$@"

start_test

cat <<END_OF_DATA >$tmp/bconcmds
@$out /dev/null
messages
setdebug level=100 storage=File
@#
@# full to Pool1
@#
@$out $tmp/log1.out
run job=$JobName pool=Pool1  level=Full yes
status director
status client
status storage=File
wait
messages
@#
@# full to Pool2
@#
@$out $tmp/log2.out
run job=$JobName pool=Pool2  level=Full yes
status director
status client
status storage=File
wait
messages

@#
@# full to Pool1
@#
@$out $tmp/log3.out
run job=$JobName pool=Pool1  level=Full yes
status director
status client
status storage=File
wait
messages
@#
@# full to Pool2
@#
@$out $tmp/log4.out
run job=$JobName pool=Pool2  level=Full yes
status director
status client
status storage=File
wait
messages
wait
messages
quit
END_OF_DATA

run_bareos "$@"
check_for_zombie_jobs storage=File
stop_bareos

check_two_logs
grep "New Pool is: Scratch1"  "$tmp/log3.out" >/dev/null
grep "New Pool is: Scratch2"  "$tmp/log4.out" >/dev/null

grep 'Using Volume \"Pool1.*\" from "Scratch1" pool.' "$tmp/log3.out" >/dev/null
grep 'Using Volume \"Pool2.*\" from "Scratch2" pool.' "$tmp/log4.out" >/dev/null

end_test
